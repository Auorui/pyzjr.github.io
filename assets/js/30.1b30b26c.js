(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{327:function(a,r,t){"use strict";t.r(r);var e=t(4),v=Object(e.a)({},(function(){var a=this,r=a._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"pyzjr-graphmath"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath"}},[a._v("#")]),a._v(" pyzjr.Graphmath")]),a._v(" "),r("blockquote",[r("p",[a._v("本文作者："),r("a",{attrs:{href:"https://github.com/Auorui",target:"_blank",rel:"noopener noreferrer"}},[a._v("Auorui(夏天是冰红茶)"),r("OutboundLink")],1)]),a._v(" "),r("p",[a._v("本站地址："),r("a",{attrs:{href:"https://pyzjr.github.io",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://pyzjr.github.io"),r("OutboundLink")],1)])]),a._v(" "),r("h2",{attrs:{id:"parameters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),r("h3",{attrs:{id:"pyzjr-graphmath-euclideandis-pts1-pts2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath-euclideandis-pts1-pts2"}},[a._v("#")]),a._v(" pyzjr.Graphmath.EuclideanDis(pts1, pts2)")]),a._v(" "),r("p",[a._v("欧式距离与中心点")]),a._v(" "),r("p",[r("strong",[a._v("参数")])]),a._v(" "),r("p",[r("code",[a._v("pts1")]),a._v("  第一个目标点")]),a._v(" "),r("p",[r("code",[a._v("pts1")]),a._v("  第二个目标点")]),a._v(" "),r("p",[r("strong",[a._v("返回")])]),a._v(" "),r("p",[a._v("  返回两点之间欧式距离以及二者的中心点")]),a._v(" "),r("h3",{attrs:{id:"pyzjr-graphmath-retain-val-t-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath-retain-val-t-2"}},[a._v("#")]),a._v(" pyzjr.Graphmath.retain(val,t=2)")]),a._v(" "),r("p",[a._v("精准保留小数,默认2位")]),a._v(" "),r("p",[r("strong",[a._v("参数")])]),a._v(" "),r("p",[r("code",[a._v("val")]),a._v("  要进行处理的值")]),a._v(" "),r("p",[r("strong",[a._v("返回")])]),a._v(" "),r("p",[a._v("  返回小数点后两位的浮点数")]),a._v(" "),r("h3",{attrs:{id:"pyzjr-graphmath-normal-x-mu-sigma"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath-normal-x-mu-sigma"}},[a._v("#")]),a._v(" pyzjr.Graphmath.normal(x, mu, sigma)")]),a._v(" "),r("p",[a._v("正态分布（高斯分布）概率密度函数")]),a._v(" "),r("p",[r("strong",[a._v("参数")])]),a._v(" "),r("p",[r("code",[a._v("x")]),a._v("  要进行处理的值")]),a._v(" "),r("p",[r("code",[a._v("mu")]),a._v("  均值")]),a._v(" "),r("p",[r("code",[a._v("sigma")]),a._v("  标准差")]),a._v(" "),r("p",[r("strong",[a._v("返回")])]),a._v(" "),r("p",[a._v("  正态分布后的结果")]),a._v(" "),r("h3",{attrs:{id:"pyzjr-graphmath-gaussian2d-x-y-sigma"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath-gaussian2d-x-y-sigma"}},[a._v("#")]),a._v(" pyzjr.Graphmath.Gaussian2D(x, y, sigma)")]),a._v(" "),r("p",[a._v("计算二维高斯函数的数值")]),a._v(" "),r("h3",{attrs:{id:"pyzjr-graphmath-advancedlist-imglist-mode-t-reverse-false"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath-advancedlist-imglist-mode-t-reverse-false"}},[a._v("#")]),a._v(" pyzjr.Graphmath.Advancedlist(imglist,mode='T',reverse=False)")]),a._v(" "),r("p",[a._v("对列表的高级排列")]),a._v(" "),r("p",[r("strong",[a._v("参数")])]),a._v(" "),r("p",[r("code",[a._v("imglist")]),a._v("  要进行处理的值")]),a._v(" "),r("p",[r("code",[a._v("mode")]),a._v("  “T”:平铺; “F”:首元素; “X”:按照x排序,默认是从小到大; “Y”:按照y排序,默认是从小到大;")]),a._v(" "),r("p",[r("code",[a._v("reverse")]),a._v("  是否进行反转，只对某些模式有用")]),a._v(" "),r("p",[r("strong",[a._v("返回")])]),a._v(" "),r("p",[a._v("  返回重新排列后的列表")]),a._v(" "),r("h3",{attrs:{id:"pyzjr-graphmath-angle-to-2pi-range-angle"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath-angle-to-2pi-range-angle"}},[a._v("#")]),a._v(" pyzjr.Graphmath.angle_to_2pi_range(angle)")]),a._v(" "),r("p",[a._v("将角度映射到0到2π")]),a._v(" "),r("h3",{attrs:{id:"pyzjr-graphmath-degree-to-radians-angle-degrees"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath-degree-to-radians-angle-degrees"}},[a._v("#")]),a._v(" pyzjr.Graphmath.degree_to_radians(angle_degrees)")]),a._v(" "),r("p",[a._v("度数转弧度")]),a._v(" "),r("h3",{attrs:{id:"pyzjr-graphmath-rand-a-0-b-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath-rand-a-0-b-1"}},[a._v("#")]),a._v(" pyzjr.Graphmath.rand(a=0., b=1.)")]),a._v(" "),r("p",[a._v("生成在指定范围内的随机浮点数,进行缩放和偏移来映射到[a, b)的范围")]),a._v(" "),r("p",[r("strong",[a._v("参数")])]),a._v(" "),r("p",[r("code",[a._v("a")]),a._v("  下界")]),a._v(" "),r("p",[r("code",[a._v("b")]),a._v("  上界")]),a._v(" "),r("p",[r("strong",[a._v("返回")])]),a._v(" "),r("p",[a._v("  随机浮点数")]),a._v(" "),r("h3",{attrs:{id:"pyzjr-graphmath-numericalmeter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pyzjr-graphmath-numericalmeter"}},[a._v("#")]),a._v(" pyzjr.Graphmath.NumericalMeter()")]),a._v(" "),r("p",[a._v("class，计算并存储平均值和当前值")]),a._v(" "),r("ul",[r("li",[r("strong",[r("code",[a._v("reset(self)")])])])]),a._v(" "),r("p",[a._v("重置函数，将记录的值归0")]),a._v(" "),r("ul",[r("li",[r("strong",[r("code",[a._v("update(self, val, n=1)")])])])]),a._v(" "),r("p",[a._v("数值更新，记录每一步传入数据后的记录")]),a._v(" "),r("p",[r("strong",[a._v("参数")])]),a._v(" "),r("p",[r("code",[a._v("val")]),a._v("  需要记录的值")]),a._v(" "),r("p",[r("code",[a._v("n")]),a._v("  次数，每隔多少进行一次记录，大多数为1")])])}),[],!1,null,null,null);r.default=v.exports}}]);